	translated static_table_translate(index Index)
	{
		static const translated Table[] =
		{
			TRANSLATED_A,		// INDEX_A
			TRANSLATED_B,		// INDEX_B
			TRANSLATED_C,		// INDEX_C
			TRANSLATED_D		// INDEX_D
		};

		static_assert(sizeof(Table) / sizeof(translated) == INDEX_COUNT, "The translation table needs to be updated.");
		assert(Index < INDEX_COUNT);

		return Table[Index];
	}

	.globl	__ZN12translation422static_table_translateENS_5indexE
	.align	4, 0x90
__ZN12translation422static_table_translateENS_5indexE: ## @_ZN12translation422static_table_translateENS_5indexE
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp7:
	.cfi_def_cfa_offset 16
Ltmp8:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp9:
	.cfi_def_cfa_register %rbp
	movl	%edi, %eax
	leaq	__ZZN12translation422static_table_translateENS_5indexEE5Table(%rip), %rcx
	movl	(%rcx,%rax,4), %eax
	popq	%rbp
	retq
	.cfi_endproc



	translated index_switch_translate(index Index)
	{
		switch(Index)
		{
		default:
		case INDEX_A: return TRANSLATED_A;
		case INDEX_B: return TRANSLATED_B;
		case INDEX_C: return TRANSLATED_C;
		case INDEX_D: return TRANSLATED_D;
		}
	}

	.globl	__ZN12translation422index_switch_translateENS_5indexE
	.align	4, 0x90
__ZN12translation422index_switch_translateENS_5indexE: ## @_ZN12translation422index_switch_translateENS_5indexE
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp37:
	.cfi_def_cfa_offset 16
Ltmp38:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp39:
	.cfi_def_cfa_register %rbp
	decl	%edi
	cmpl	$2, %edi
	ja	LBB7_2
## BB#1:                                ## %switch.lookup
	movslq	%edi, %rax
	leaq	l_switch.table(%rip), %rcx
	movl	(%rcx,%rax,4), %eax
	popq	%rbp
	retq
LBB7_2:
	movl	$41191, %eax            ## imm = 0xA0E7
	popq	%rbp
	retq
	.cfi_endproc

// Without 'default:''
	.globl	__ZN12translation422index_switch_translateENS_5indexE
	.align	4, 0x90
__ZN12translation422index_switch_translateENS_5indexE: ## @_ZN12translation422index_switch_translateENS_5indexE
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp37:
	.cfi_def_cfa_offset 16
Ltmp38:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp39:
	.cfi_def_cfa_register %rbp
	cmpl	$3, %edi
	ja	LBB7_2
## BB#1:                                ## %switch.lookup
	movslq	%edi, %rax
	leaq	l_switch.table(%rip), %rcx
	movl	(%rcx,%rax,4), %eax
LBB7_2:
	popq	%rbp
	retq
	.cfi_endproc


	index value_switch_translate(translated Value)
	{
		switch(Value)
		{
		default:
		case TRANSLATED_A: return INDEX_A;
		case TRANSLATED_B: return INDEX_B;
		case TRANSLATED_C: return INDEX_C;
		case TRANSLATED_D: return INDEX_D;
		}
	}

	.globl	__ZN12translation422value_switch_translateENS_10translatedE
	.align	4, 0x90
__ZN12translation422value_switch_translateENS_10translatedE: ## @_ZN12translation422value_switch_translateENS_10translatedE
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp42:
	.cfi_def_cfa_offset 16
Ltmp43:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp44:
	.cfi_def_cfa_register %rbp
	cmpl	$35567, %edi            ## imm = 0x8AEF
	je	LBB8_5
## BB#1:
	cmpl	$11317, %edi            ## imm = 0x2C35
	jne	LBB8_2
## BB#4:
	movl	$2, %eax
	popq	%rbp
	retq
LBB8_5:
	movl	$3, %eax
	jmp	LBB8_6
LBB8_2:
	xorl	%eax, %eax
	cmpl	$450, %edi              ## imm = 0x1C2
	jne	LBB8_6
## BB#3:
	movl	$1, %eax
	popq	%rbp
	retq
LBB8_6:
	popq	%rbp
	retq
	.cfi_endproc
